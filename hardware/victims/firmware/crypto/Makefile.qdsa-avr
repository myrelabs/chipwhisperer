
CRYPTO_LIB = qdsa-avr/

SRC += ladder.c scalar.c fe25519.c fe25519_invert.c
ASRC += bigint_add.S bigint_mul256.S bigint_mul.S bigint_square256.S bigint_subp.S bigint_sub.S fe25519_add.S fe25519_mul121666.S fe25519_red.S fe25519_sub.S
CDEFS += -DQDSAAVR
VPATH += :$(FIRMWAREPATH)/crypto/$(CRYPTO_LIB):$(FIRMWAREPATH)/crypto/$(CRYPTO_LIB)/asm 
EXTRAINCDIRS += $(FIRMWAREPATH)/crypto/$(CRYPTO_LIB) $(FIRMWAREPATH)/crypto/$(CRYPTO_LIB)/asm

ifeq ($(CRYPTO_OPTIONS),ECDH)
 SRC += dh.c

else ifeq ($(CRYPTO_OPTIONS),QDSA)
 SRC += sign.c
 ASRC += hash.S

else

 $(error: Unknown or blank CRYPTO_OPTIONS: $(CRYPTO_OPTIONS). CRYPTO_OPTIONS is required for this CRYPTO_TARGET)
endif #QDSAAVR

